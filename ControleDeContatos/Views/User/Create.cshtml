@using ControleDeContatos.Enums
@model UserModel
@{
    ViewData["Title"] = "Criar usuário";
}

<div class="text-center">
    <h1 class="display-4">Cadastrar usuário</h1>
</div>


<form asp-controller="Usuario" asp-action="Criar" method="post">

    <div class="form-group">
        <label for="nome" class="form-label">Nome</label>
        <input type="text" asp-for="Name" class="form-control" placeholder="Digite o nome do usuário">
        @Html.ValidationMessageFor(x => x.Name)
    </div>

    <div class="form-group">
        <label for="nome" class="form-label">E-mail</label>
        <input type="text" asp-for="Email" class="form-control" placeholder="Digite o e-mail do usuário">
        @Html.ValidationMessageFor(x => x.Email)
    </div>

    <div class="form-group">
        <label for="nome" class="form-label">Login</label>
        <input type="text" asp-for="Login" class="form-control" placeholder="Digite o login do usuário">
        @Html.ValidationMessageFor(x => x.Login)
    </div>

    <div class="form-group">
        <label for="nome" class="form-label">Perfil</label>
        <select asp-for="Profile" class="form-control">
            <option value="">Selecione</option>
            <option value="@ProfileEnum.Admin" >Administrador</option>
            <option value="@ProfileEnum.Default" >Padrão</option>
        </select>
        @Html.ValidationMessageFor(x => x.Profile)
    </div>

    <div class="form-group">
        <label for="nome" class="form-label">Senha</label>
        <input type="password" asp-for="Password" class="form-control" placeholder="Digite a senha do usuário">
        @Html.ValidationMessageFor(x => x.Password)
    </div>

    <button type="submit" class="btn btn-primary btn-block">Adicionar</button>
    <a class="btn btn-secondary btn-block" asp-action="Index" asp-controller="Usuario" role="button">Voltar</a>

</form>
